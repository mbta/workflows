on:
  workflow_call:
    inputs:
      app-name:
        type: string
        required: true
        description: The name of the app, used to generate the ECS service name and ECS cluster if not specified
      dockerfile-path:
        type: string
        description: Path to the repo's Dockerfile
        required: false
        default: '.'
      environment:
        type: string
        required: true
        description: E.g. 'prod' or 'dev', to concatenate with app for ECS service
      cluster:
        type: string
        required: false
        description: Name of the ECS cluster, defaulting to app-name if not specified
    secrets:
      aws-role-arn:
        required: true
      docker-repo:
        required: true
      slack-webhook:
        required: true

jobs:
  deploy:
    name: Deploy ${{ github.ref_name }} to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: ${{ inputs.environment }}
    concurrency: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - uses: mbta/actions/build-push-ecr@v2
        id: build-push
        with:
          role-to-assume: ${{ secrets.aws-role-arn }}
          docker-repo: ${{ secrets.docker-repo }}
          dockerfile-path: ${{ inputs.dockerfile-path }}
      - uses: mbta/actions/deploy-ecs@v2
        with:
          role-to-assume: ${{ secrets.aws-role-arn }}
          ecs-cluster: ${{ inputs.cluster || inputs.app-name }}
          ecs-service: ${{ inputs.app-name }}-${{ inputs.environment }}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.slack-webhook }}
          job-status: ${{ job.status }}
